
Parcial3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000330  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002bc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800200  00800200  00000330  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000360  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  000003a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d06  00000000  00000000  000003e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bf4  00000000  00000000  000010e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003bc  00000000  00000000  00001cda  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  00002098  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000587  00000000  00000000  00002168  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000150  00000000  00000000  000026ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000283f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	92 c0       	rjmp	.+292    	; 0x12a <__vector_1>
   6:	00 00       	nop
   8:	ab c0       	rjmp	.+342    	; 0x160 <__vector_2>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	cb c0       	rjmp	.+406    	; 0x1e8 <__vector_20>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a8 30       	cpi	r26, 0x08	; 8
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	02 d0       	rcall	.+4      	; 0x10a <main>
 106:	d8 c0       	rjmp	.+432    	; 0x2b8 <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <main>:
int paro=0;

int main(void)
{
	
	DDRA=0XFF;
 10a:	8f ef       	ldi	r24, 0xFF	; 255
 10c:	81 b9       	out	0x01, r24	; 1
	PORTA=0X00;
 10e:	12 b8       	out	0x02, r1	; 2
	
	DDRB=0XFF;
 110:	84 b9       	out	0x04, r24	; 4
	PORTB=0X00;
 112:	15 b8       	out	0x05, r1	; 5
	
	DDRC=0XFF;
 114:	87 b9       	out	0x07, r24	; 7
	PORTC=0X00;
 116:	18 b8       	out	0x08, r1	; 8
	
	EIMSK=0X03;		//Habilitar interrupcion 0 (inicio) y 1 (fin)
 118:	83 e0       	ldi	r24, 0x03	; 3
 11a:	8d bb       	out	0x1d, r24	; 29
	EICRA=0X0F;		//Por flanco de subida
 11c:	8f e0       	ldi	r24, 0x0F	; 15
 11e:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
	
	sei();
 122:	78 94       	sei
	
	while(1){
		asm("NOP");
 124:	00 00       	nop
		asm("NOP");
 126:	00 00       	nop
 128:	fd cf       	rjmp	.-6      	; 0x124 <main+0x1a>

0000012a <__vector_1>:
	}
	
}
	ISR(INT0_vect){
 12a:	1f 92       	push	r1
 12c:	0f 92       	push	r0
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	0f 92       	push	r0
 132:	11 24       	eor	r1, r1
 134:	8f 93       	push	r24
		
		paro=0;
 136:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 13a:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
		TCCR1B=0B100;		//	Prescaler 256 Num ciclos 1s=31.250
 13e:	84 e0       	ldi	r24, 0x04	; 4
 140:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
		TCNT1H=0xDC;
 144:	8c ed       	ldi	r24, 0xDC	; 220
 146:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
		TCNT1L=0X01;		//Desborde a 1s
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
		TIMSK1=0x01;		//Habilita interrupcion por desbordar
 150:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
		
	}
 154:	8f 91       	pop	r24
 156:	0f 90       	pop	r0
 158:	0f be       	out	0x3f, r0	; 63
 15a:	0f 90       	pop	r0
 15c:	1f 90       	pop	r1
 15e:	18 95       	reti

00000160 <__vector_2>:
	ISR(INT1_vect){
 160:	1f 92       	push	r1
 162:	0f 92       	push	r0
 164:	0f b6       	in	r0, 0x3f	; 63
 166:	0f 92       	push	r0
 168:	11 24       	eor	r1, r1
 16a:	8f 93       	push	r24
 16c:	9f 93       	push	r25
		paro=1;
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 176:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
		tiempo=0;
 17a:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <tiempo+0x1>
 17e:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <tiempo>
		s=0;
 182:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <s+0x1>
 186:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <s>
		min=0;
 18a:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <min+0x1>
 18e:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <min>
		
	}
 192:	9f 91       	pop	r25
 194:	8f 91       	pop	r24
 196:	0f 90       	pop	r0
 198:	0f be       	out	0x3f, r0	; 63
 19a:	0f 90       	pop	r0
 19c:	1f 90       	pop	r1
 19e:	18 95       	reti

000001a0 <imprimir>:

	}

	void imprimir(){
		
		min=tiempo/60;
 1a0:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <tiempo>
 1a4:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <tiempo+0x1>
 1a8:	2c e3       	ldi	r18, 0x3C	; 60
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	b9 01       	movw	r22, r18
 1ae:	5d d0       	rcall	.+186    	; 0x26a <__divmodhi4>
 1b0:	60 93 02 02 	sts	0x0202, r22	; 0x800202 <min>
 1b4:	70 93 03 02 	sts	0x0203, r23	; 0x800203 <min+0x1>
		PORTA=min;
 1b8:	62 b9       	out	0x02, r22	; 2
		
		s=tiempo%60;
 1ba:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <tiempo>
 1be:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <tiempo+0x1>
 1c2:	b9 01       	movw	r22, r18
 1c4:	52 d0       	rcall	.+164    	; 0x26a <__divmodhi4>
 1c6:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <s+0x1>
 1ca:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <s>
		int d=s/10;
 1ce:	2a e0       	ldi	r18, 0x0A	; 10
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	b9 01       	movw	r22, r18
 1d4:	4a d0       	rcall	.+148    	; 0x26a <__divmodhi4>
		PORTB=d;
 1d6:	65 b9       	out	0x05, r22	; 5
		int u=s%10;
 1d8:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <s>
 1dc:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <s+0x1>
 1e0:	b9 01       	movw	r22, r18
 1e2:	43 d0       	rcall	.+134    	; 0x26a <__divmodhi4>
		PORTC=u;
 1e4:	88 b9       	out	0x08, r24	; 8
 1e6:	08 95       	ret

000001e8 <__vector_20>:
		tiempo=0;
		s=0;
		min=0;
		
	}
	ISR(TIMER1_OVF_vect){
 1e8:	1f 92       	push	r1
 1ea:	0f 92       	push	r0
 1ec:	0f b6       	in	r0, 0x3f	; 63
 1ee:	0f 92       	push	r0
 1f0:	11 24       	eor	r1, r1
 1f2:	0b b6       	in	r0, 0x3b	; 59
 1f4:	0f 92       	push	r0
 1f6:	2f 93       	push	r18
 1f8:	3f 93       	push	r19
 1fa:	4f 93       	push	r20
 1fc:	5f 93       	push	r21
 1fe:	6f 93       	push	r22
 200:	7f 93       	push	r23
 202:	8f 93       	push	r24
 204:	9f 93       	push	r25
 206:	af 93       	push	r26
 208:	bf 93       	push	r27
 20a:	ef 93       	push	r30
 20c:	ff 93       	push	r31
		
		if(paro==0){
 20e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 212:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 216:	89 2b       	or	r24, r25
 218:	a9 f4       	brne	.+42     	; 0x244 <__vector_20+0x5c>
			tiempo++;
 21a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <tiempo>
 21e:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <tiempo+0x1>
 222:	01 96       	adiw	r24, 0x01	; 1
 224:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <tiempo+0x1>
 228:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <tiempo>
			
			TCCR1B=0B100;		//	Prescaler 256 Num ciclos 1s=31.250
 22c:	84 e0       	ldi	r24, 0x04	; 4
 22e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
			TCNT1H=0xDC;
 232:	8c ed       	ldi	r24, 0xDC	; 220
 234:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
			TCNT1L=0X01;		//Desborde a 1s
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
			TIMSK1=0x01;		//Habilita interrupcion por desbordar
 23e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
			
			imprimir();
 242:	ae df       	rcall	.-164    	; 0x1a0 <imprimir>
		}
		
		

	}
 244:	ff 91       	pop	r31
 246:	ef 91       	pop	r30
 248:	bf 91       	pop	r27
 24a:	af 91       	pop	r26
 24c:	9f 91       	pop	r25
 24e:	8f 91       	pop	r24
 250:	7f 91       	pop	r23
 252:	6f 91       	pop	r22
 254:	5f 91       	pop	r21
 256:	4f 91       	pop	r20
 258:	3f 91       	pop	r19
 25a:	2f 91       	pop	r18
 25c:	0f 90       	pop	r0
 25e:	0b be       	out	0x3b, r0	; 59
 260:	0f 90       	pop	r0
 262:	0f be       	out	0x3f, r0	; 63
 264:	0f 90       	pop	r0
 266:	1f 90       	pop	r1
 268:	18 95       	reti

0000026a <__divmodhi4>:
 26a:	97 fb       	bst	r25, 7
 26c:	07 2e       	mov	r0, r23
 26e:	16 f4       	brtc	.+4      	; 0x274 <__divmodhi4+0xa>
 270:	00 94       	com	r0
 272:	06 d0       	rcall	.+12     	; 0x280 <__divmodhi4_neg1>
 274:	77 fd       	sbrc	r23, 7
 276:	08 d0       	rcall	.+16     	; 0x288 <__divmodhi4_neg2>
 278:	0b d0       	rcall	.+22     	; 0x290 <__udivmodhi4>
 27a:	07 fc       	sbrc	r0, 7
 27c:	05 d0       	rcall	.+10     	; 0x288 <__divmodhi4_neg2>
 27e:	3e f4       	brtc	.+14     	; 0x28e <__divmodhi4_exit>

00000280 <__divmodhi4_neg1>:
 280:	90 95       	com	r25
 282:	81 95       	neg	r24
 284:	9f 4f       	sbci	r25, 0xFF	; 255
 286:	08 95       	ret

00000288 <__divmodhi4_neg2>:
 288:	70 95       	com	r23
 28a:	61 95       	neg	r22
 28c:	7f 4f       	sbci	r23, 0xFF	; 255

0000028e <__divmodhi4_exit>:
 28e:	08 95       	ret

00000290 <__udivmodhi4>:
 290:	aa 1b       	sub	r26, r26
 292:	bb 1b       	sub	r27, r27
 294:	51 e1       	ldi	r21, 0x11	; 17
 296:	07 c0       	rjmp	.+14     	; 0x2a6 <__udivmodhi4_ep>

00000298 <__udivmodhi4_loop>:
 298:	aa 1f       	adc	r26, r26
 29a:	bb 1f       	adc	r27, r27
 29c:	a6 17       	cp	r26, r22
 29e:	b7 07       	cpc	r27, r23
 2a0:	10 f0       	brcs	.+4      	; 0x2a6 <__udivmodhi4_ep>
 2a2:	a6 1b       	sub	r26, r22
 2a4:	b7 0b       	sbc	r27, r23

000002a6 <__udivmodhi4_ep>:
 2a6:	88 1f       	adc	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	5a 95       	dec	r21
 2ac:	a9 f7       	brne	.-22     	; 0x298 <__udivmodhi4_loop>
 2ae:	80 95       	com	r24
 2b0:	90 95       	com	r25
 2b2:	bc 01       	movw	r22, r24
 2b4:	cd 01       	movw	r24, r26
 2b6:	08 95       	ret

000002b8 <_exit>:
 2b8:	f8 94       	cli

000002ba <__stop_program>:
 2ba:	ff cf       	rjmp	.-2      	; 0x2ba <__stop_program>
